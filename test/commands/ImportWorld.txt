AllTurtles
  globals [glob1 glob2]
  O> crt 10
  O> set glob1 turtles
  O> set glob2 turtles with [true]
  O> crt 10
  count glob1 => 20
  count glob2 => 10

AllTurtlesExport
  globals [glob1 glob2]
  to export-round-trip let file (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )  export-world file ca import-world file end
  O> __mkdir "tmp/ImportWorld"
  O> crt 10
  O> set glob1 turtles
  O> set glob2 turtles with [true]
  O> export-round-trip
  O> crt 10
  count glob1 => 20
  count glob2 => 10

AllBreeds
  globals [glob1 glob2 glob3]
  breed [frogs frog]
  O> create-frogs 10
  O> set glob1 frogs
  O> set glob2 frogs with [true]
  O> set glob3 turtles
  O> create-frogs 10
  O> crt 10
  count glob1 => 20
  count glob2 => 10
  count glob3 => 30

AllLinks
  globals [glob1 glob2 glob3]
  breed [frogs frog]
  directed-link-breed [directed-links directed-link]
  undirected-link-breed [undirected-links undirected-link]
  O> create-frogs 10
  O> ask turtle 0 [ create-directed-link-to turtle 1 ]
  O> ask turtle 1 [ create-undirected-link-with turtle 2 ]
  O> set glob1 links
  O> set glob2 links with [true]
  O> set glob3 directed-links
  O> ask turtle 2 [ create-undirected-link-with turtle 3 ]
  O> ask turtle 3 [ create-directed-link-to turtle 4 ]
  count glob1 => 4
  count glob2 => 2
  count glob3 => 2

AllLinkBreeds
  globals [glob1 glob2 glob3]
  breed [frogs frog]
  directed-link-breed [directed-links directed-link]
  undirected-link-breed [undirected-links undirected-link]
  O> create-frogs 10
  O> ask turtle 0 [ create-directed-link-to turtle 1 ]
  O> ask turtle 1 [ create-undirected-link-with turtle 2 ]
  O> set glob1 links
  O> set glob2 directed-links with [true]
  O> set glob3 directed-links
  O> ask turtle 2 [ create-undirected-link-with turtle 3 ]
  O> ask turtle 3 [ create-directed-link-to turtle 4 ]
  count glob1 => 4
  count glob2 => 1
  count glob3 => 2

AllBreedsExport
  globals [glob1 glob2 glob3]
  breed [frogs frog]
  to export-round-trip let file (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )  export-world file ca import-world file end
  O> __mkdir "tmp/ImportWorld"
  O> create-frogs 10
  O> set glob1 frogs
  O> set glob2 frogs with [true]
  O> set glob3 turtles
  O> export-round-trip
  O> create-frogs 10
  O> crt 10
  count glob1 => 20
  count glob2 => 10
  count glob3 => 30

AllLinkBreedsExport
  breed [frogs frog]
  directed-link-breed [directed-links directed-link]
  undirected-link-breed [undirected-links undirected-link]
  globals [glob1 glob2 glob3]
  to export-round-trip let file (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )  export-world file ca import-world file end
  O> __mkdir "tmp/ImportWorld"
  O> create-frogs 10
  O> ask turtle 0 [ create-directed-link-to turtle 1 ]
  O> ask turtle 1 [ create-undirected-link-with turtle 2 ]
  O> set glob1 links
  O> set glob2 links with [true]
  O> set glob3 directed-links
  O> export-round-trip
  O> ask turtle 2 [ create-undirected-link-with turtle 3 ]
  O> ask turtle 3 [ create-directed-link-to turtle 4 ]
  count glob1 => 4
  count glob2 => 2
  count glob3 => 2

ImportExportBreedOrder
  globals [glob1]
  breed [frogs frog]
  O> __mkdir "tmp/ImportWorld"
  O> random-seed 6924
  O> cro 10
  O> ask turtles [ set breed frogs ]
  O> ask turtle 0 [ die ]
  O> set glob1 (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )
  O> export-world glob1
  [who] of one-of frogs => 7
  O> import-world glob1
  [who] of one-of frogs => 7

ImportExportLinkBreedOrder
  globals [glob1]
  directed-link-breed [directed-links directed-link]
  to export-round-trip let file (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )  export-world file let the-turtle [list [who] of end1 [who] of end2 ] of one-of links import-world file set glob1 the-turtle end
  O> __mkdir "tmp/ImportWorld"
  O> random-seed 6924
  O> cro 10
  O> ask turtles [ create-directed-links-to turtles with [ who > [who] of myself ] ]
  O> ask directed-link 0 1 [ die ]
  O> export-round-trip
  [list [who] of end1 [who] of end2 ] of one-of links = glob1 => true

RoundTripWithUTF8Chars
  globals [glob1]
  to export-round-trip let file (word "tmp/ImportWorld/test-file-" __nano-time ".csv" )  export-world file ca import-world file end
  O> set glob1 "AêñüC"
  O> export-round-trip
  O> print glob1
  glob1 => "AêñüC"

