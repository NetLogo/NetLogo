<?xml version="1.0" encoding="us-ascii"?>
<!DOCTYPE experiments SYSTEM "behaviorspace.dtd">
<experiments>
  <experiment name="testBehaviorSpace1" repetitions="2" runMetricsEveryStep="true">
    <setup>set counter 0</setup>
    <go>repeat param1 [ repeat param2 [ set counter counter + 1 ] ]</go>
    <timeLimit steps="2"/>
    <exitCondition>counter &gt; param2</exitCondition>
    <metric>counter</metric>
    <enumeratedValueSet variable="param1">
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
    </enumeratedValueSet>
    <steppedValueSet variable="param2" first="1" step="1" last="5"/>
  </experiment>
  <experiment name="testBehaviorSpace2" repetitions="2" runMetricsEveryStep="false">
    <setup>set counter 0</setup>
    <go>repeat param1 [ repeat param2 [ set counter counter + 1 ] ]</go>
    <timeLimit steps="2"/>
    <exitCondition>counter &gt; param2</exitCondition>
    <metric>counter</metric>
    <enumeratedValueSet variable="param1">
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
    </enumeratedValueSet>
    <steppedValueSet variable="param2" first="1" step="1" last="5"/>
  </experiment>
  <experiment name="testMultipleMetrics" repetitions="1" runMetricsEveryStep="true">
    <setup>set counter 0</setup>
    <go>set counter counter + 1</go>
    <timeLimit steps="4"/>
    <exitCondition>counter &gt;= param1</exitCondition>
    <metric>counter</metric>
    <metric>counter / 2</metric>
    <metric>counter / 10</metric>
    <enumeratedValueSet variable="param1">
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="testNoMetrics1" repetitions="1" runMetricsEveryStep="true">
    <setup>set counter 0</setup>
    <go>set counter counter + 1</go>
    <timeLimit steps="4"/>
    <exitCondition>counter &gt;= param1</exitCondition>
    <enumeratedValueSet variable="param1">
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="testNoMetrics2" repetitions="1" runMetricsEveryStep="false">
    <setup>set counter 0</setup>
    <go>set counter counter + 1</go>
    <timeLimit steps="4"/>
    <exitCondition>counter &gt;= param1</exitCondition>
    <enumeratedValueSet variable="param1">
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="testImmediateExit" repetitions="1" runMetricsEveryStep="true">
    <setup>set foo 0</setup>
    <final>set foo 99</final>
    <timeLimit steps="4"/>
    <exitCondition>true</exitCondition>
    <metric>5</metric>
  </experiment>
  <experiment name="testCarryover" repetitions="4" runMetricsEveryStep="true">
    <go>set foo foo + 1</go>
    <timeLimit steps="5"/>
    <metric>foo</metric>
  </experiment>
  <experiment name="experiment1" repetitions="5" runMetricsEveryStep="true">
    <setup>setup-random</setup>
    <go>go</go>
    <final>show timer</final>
    <timeLimit steps="50"/>
    <exitCondition>"foo&amp;bar!"

"\n+\n"baz!</exitCondition>
    <metric>count patches with [living?]</metric>
    <steppedValueSet variable="bgcolor" first="0" step="1" last="100"/>
    <enumeratedValueSet variable="fgcolor">
      <value value="133"/>
      <value value="134"/>
      <value value="135"/>
      <value value="136"/>
    </enumeratedValueSet>
    <steppedValueSet variable="foobarbaz" first="0" step="1" last="100"/>
    <enumeratedValueSet variable="foo?">
      <value value="true"/>
      <value value="false"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="experiment2" repetitions="6" runMetricsEveryStep="false">
    <setup>setup-random</setup>
    <go>go</go>
    <timeLimit steps="50"/>
    <metric>count patches with [living?]</metric>
    <metric>count patches with [not living?]</metric>
  </experiment>
  <experiment name="experiment3" repetitions="9" runMetricsEveryStep="true">
    <setup>setup-random</setup>
    <go>go</go>
    <timeLimit steps="11"/>
    <metric>count patches with [living?]</metric>
    <metric>count patches with [not living?]</metric>
  </experiment>
  <experiment name="experiment4" repetitions="9" runMetricsEveryStep="true">
    <setup>setup-random</setup>
    <go>go</go>
  </experiment>
  <experiment name="testResizingWorld1" repetitions="1" runMetricsEveryStep="false">
    <exitCondition>true</exitCondition>
    <metric>count patches</metric>
    <steppedValueSet variable="max-pxcor" first="0" step="1" last="5"/>
    <steppedValueSet variable="max-pycor" first="0" step="1" last="5"/>
  </experiment>
  <experiment name="testResizingWorld2" repetitions="1" runMetricsEveryStep="false">
    <exitCondition>true</exitCondition>
    <metric>count patches</metric>
    <steppedValueSet variable="world-width" first="1" step="2" last="11"/>
    <steppedValueSet variable="world-height" first="1" step="2" last="11"/>
  </experiment>
  <experiment name="testResizingWorld3" repetitions="1" runMetricsEveryStep="false">
    <exitCondition>true</exitCondition>
    <metric>count patches</metric>
    <steppedValueSet variable="world-width" first="2" step="1" last="5"/>
  </experiment>
  <experiment name="testRandomSeed" repetitions="2" runMetricsEveryStep="true">
    <timeLimit steps="2"/>
    <metric>random 1000</metric>
    <steppedValueSet variable="random-seed" first="0" step="1" last="2"/>
  </experiment>
  <experiment name="testExportGraphics" repetitions="1" runMetricsEveryStep="false">
    <setup>ask patches [ set pcolor black ] crt 10 [ set size 10 fd random 40 ]</setup>
    <final>export-view "tmp/testExportGraphics.png"</final>
    <timeLimit steps="20"/>
    <metric>random 1000</metric>
  </experiment>
  <experiment name="testStopping1" repetitions="1" runMetricsEveryStep="false">
    <setup>set x 0</setup>
    <go>if x = 5 [ stop ] set x x + 1</go>
    <timeLimit steps="10"/>
  </experiment>
  <experiment name="testStopping2" repetitions="1" runMetricsEveryStep="false">
    <setup>set x 0</setup>
    <go>go</go>
    <timeLimit steps="10"/>
  </experiment>
  <experiment name="badAtBeginning" repetitions="1" runMetricsEveryStep="false">
    <setup>setup</setup>
    <go>go</go>
    <timeLimit steps="5"/>
    <metric>bad-divide</metric>
  </experiment>
  <experiment name="metricsLocalRandomness" repetitions="1" runMetricsEveryStep="true">
    <setup>random-seed 0</setup>
    <go>set x random-float 1.0</go>
    <timeLimit steps="2"/>
    <metric>random-float 1.0</metric>
  </experiment>
  <experiment name="exitConditionLocalRandomness" repetitions="1" runMetricsEveryStep="true">
    <setup>random-seed 0</setup>
    <go>set x random-float 1.0</go>
    <timeLimit steps="3"/>
    <exitCondition>one-of [false false]</exitCondition>
    <metric>random-float 1.0</metric>
  </experiment>
  <experiment name="wait1" repetitions="4" runMetricsEveryStep="true">
    <setup>reset-timer</setup>
    <go>wait 1</go>
    <timeLimit steps="2"/>
    <metric>round timer</metric>
  </experiment>
  <experiment name="metricGoBoom" repetitions="2" runMetricsEveryStep="true">
    <setup>ca reset-ticks</setup>
    <go>tick</go>
    <timeLimit steps="2"/>
    <metric>__boom</metric>
  </experiment>
  <experiment name="metricGoBoom2" repetitions="100" runMetricsEveryStep="true">
    <setup>setup</setup>
    <go>go</go>
    <timeLimit steps="20"/>
    <metric>mean [who] of turtles</metric>
  </experiment>
  <experiment name="goCommandsGoBoom" repetitions="2" runMetricsEveryStep="true">
    <setup>ca reset-ticks</setup>
    <go>tick __ignore __boom</go>
    <timeLimit steps="2"/>
    <metric>ticks</metric>
  </experiment>
  <experiment name="setupCommandsGoBoom" repetitions="2" runMetricsEveryStep="true">
    <setup>ca reset-ticks __ignore __boom</setup>
    <go>tick</go>
    <timeLimit steps="2"/>
    <metric>ticks</metric>
  </experiment>
  <experiment name="metricsWithSideEffects" repetitions="1" runMetricsEveryStep="true">
    <setup>clear-all reset-ticks</setup>
    <go>tick</go>
    <timeLimit steps="2"/>
    <metric>metric</metric>
  </experiment>
  <experiment name="runNumber" repetitions="3" runMetricsEveryStep="true">
    <setup>clear-all reset-ticks</setup>
    <go>tick</go>
    <timeLimit steps="2"/>
    <metric>behaviorspace-run-number</metric>
  </experiment>
</experiments>
