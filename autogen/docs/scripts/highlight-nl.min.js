require=function(){function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c||a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}return a}()({1:[function(a,b,c){(function(a){(function(){var c="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},d=function(){var a=/\blang(?:uage)?-(\w+)\b/i,b=0,d=c.Prism={util:{encode:function(a){return a instanceof e?new e(a.type,d.util.encode(a.content),a.alias):"Array"===d.util.type(a)?a.map(d.util.encode):a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(a){return Object.prototype.toString.call(a).match(/\[object (\w+)\]/)[1]},objId:function(a){return a.__id||Object.defineProperty(a,"__id",{value:++b}),a.__id},clone:function(a){var b=d.util.type(a);switch(b){case"Object":var c={};for(var e in a)a.hasOwnProperty(e)&&(c[e]=d.util.clone(a[e]));return c;case"Array":return a.map&&a.map(function(a){return d.util.clone(a)})}return a}},languages:{extend:function(a,b){var c=d.util.clone(d.languages[a]);for(var e in b)c[e]=b[e];return c},insertBefore:function(a,b,c,e){e=e||d.languages;var f=e[a];if(2==arguments.length){c=arguments[1];for(var g in c)c.hasOwnProperty(g)&&(f[g]=c[g]);return f}var h={};for(var i in f)if(f.hasOwnProperty(i)){if(i==b)for(var g in c)c.hasOwnProperty(g)&&(h[g]=c[g]);h[i]=f[i]}return d.languages.DFS(d.languages,function(b,c){c===e[a]&&b!=a&&(this[b]=h)}),e[a]=h},DFS:function(a,b,c,e){e=e||{};for(var f in a)a.hasOwnProperty(f)&&(b.call(a,f,a[f],c||f),"Object"!==d.util.type(a[f])||e[d.util.objId(a[f])]?"Array"!==d.util.type(a[f])||e[d.util.objId(a[f])]||(e[d.util.objId(a[f])]=!0,d.languages.DFS(a[f],b,f,e)):(e[d.util.objId(a[f])]=!0,d.languages.DFS(a[f],b,null,e)))}},plugins:{},highlightAll:function(a,b){var c={callback:b,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};d.hooks.run("before-highlightall",c);for(var e,f=c.elements||document.querySelectorAll(c.selector),g=0;e=f[g++];)d.highlightElement(e,a===!0,c.callback)},highlightElement:function(b,e,f){for(var g,h,i=b;i&&!a.test(i.className);)i=i.parentNode;i&&(g=(i.className.match(a)||[,""])[1].toLowerCase(),h=d.languages[g]),b.className=b.className.replace(a,"").replace(/\s+/g," ")+" language-"+g,i=b.parentNode,/pre/i.test(i.nodeName)&&(i.className=i.className.replace(a,"").replace(/\s+/g," ")+" language-"+g);var j=b.textContent,k={element:b,language:g,grammar:h,code:j};if(d.hooks.run("before-sanity-check",k),!k.code||!k.grammar)return void d.hooks.run("complete",k);if(d.hooks.run("before-highlight",k),e&&c.Worker){var l=new Worker(d.filename);l.onmessage=function(a){k.highlightedCode=a.data,d.hooks.run("before-insert",k),k.element.innerHTML=k.highlightedCode,f&&f.call(k.element),d.hooks.run("after-highlight",k),d.hooks.run("complete",k)},l.postMessage(JSON.stringify({language:k.language,code:k.code,immediateClose:!0}))}else k.highlightedCode=d.highlight(k.code,k.grammar,k.language),d.hooks.run("before-insert",k),k.element.innerHTML=k.highlightedCode,f&&f.call(b),d.hooks.run("after-highlight",k),d.hooks.run("complete",k)},highlight:function(a,b,c){var f=d.tokenize(a,b);return e.stringify(d.util.encode(f),c)},tokenize:function(a,b,c){var e=d.Token,f=[a],g=b.rest;if(g){for(var h in g)b[h]=g[h];delete b.rest}a:for(var h in b)if(b.hasOwnProperty(h)&&b[h]){var i=b[h];i="Array"===d.util.type(i)?i:[i];for(var j=0;j<i.length;++j){var k=i[j],l=k.inside,m=!!k.lookbehind,n=!!k.greedy,o=0,p=k.alias;k=k.pattern||k;for(var q=0;q<f.length;q++){var r=f[q];if(f.length>a.length)break a;if(!(r instanceof e)){k.lastIndex=0;var s=k.exec(r),t=1;if(!s&&n&&q!=f.length-1){var u=f[q+1].matchedStr||f[q+1],v=r+u;if(q<f.length-2&&(v+=f[q+2].matchedStr||f[q+2]),k.lastIndex=0,s=k.exec(v),!s)continue;var w=s.index+(m?s[1].length:0);if(w>=r.length)continue;var x=s.index+s[0].length,y=r.length+u.length;if(t=3,x<=y){if(f[q+1].greedy)continue;t=2,v=v.slice(0,y)}r=v}if(s){m&&(o=s[1].length);var w=s.index+o,s=s[0].slice(o),x=w+s.length,z=r.slice(0,w),A=r.slice(x),B=[q,t];z&&B.push(z);var C=new e(h,l?d.tokenize(s,l):s,p,s,n);B.push(C),A&&B.push(A),Array.prototype.splice.apply(f,B)}}}}}return f},hooks:{all:{},add:function(a,b){var c=d.hooks.all;c[a]=c[a]||[],c[a].push(b)},run:function(a,b){var c=d.hooks.all[a];if(c&&c.length)for(var e,f=0;e=c[f++];)e(b)}}},e=d.Token=function(a,b,c,d,e){this.type=a,this.content=b,this.alias=c,this.matchedStr=d||null,this.greedy=!!e};if(e.stringify=function(a,b,c){if("string"==typeof a)return a;if("Array"===d.util.type(a))return a.map(function(c){return e.stringify(c,b,a)}).join("");var f={type:a.type,content:e.stringify(a.content,b,c),tag:"span",classes:["token",a.type],attributes:{},language:b,parent:c};if("comment"==f.type&&(f.attributes.spellcheck="true"),a.alias){var g="Array"===d.util.type(a.alias)?a.alias:[a.alias];Array.prototype.push.apply(f.classes,g)}d.hooks.run("wrap",f);var h="";for(var i in f.attributes)h+=(h?" ":"")+i+'="'+(f.attributes[i]||"")+'"';return"<"+f.tag+' class="'+f.classes.join(" ")+'" '+h+">"+f.content+"</"+f.tag+">"},!c.document)return c.addEventListener?(c.addEventListener("message",function(a){var b=JSON.parse(a.data),e=b.language,f=b.code,g=b.immediateClose;c.postMessage(d.highlight(f,d.languages[e],e)),g&&c.close()},!1),c.Prism):c.Prism;var f=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return f&&(d.filename=f.src,document.addEventListener&&!f.hasAttribute("data-manual")&&("loading"!==document.readyState?requestAnimationFrame(d.highlightAll,0):document.addEventListener("DOMContentLoaded",d.highlightAll))),c.Prism}();"undefined"!=typeof b&&b.exports&&(b.exports=d),"undefined"!=typeof a&&(a.Prism=d),d.languages.markup={comment:/<!--[\w\W]*?-->/,prolog:/<\?[\w\W]+?\?>/,doctype:/<!DOCTYPE[\w\W]+?>/,cdata:/<!\[CDATA\[[\w\W]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=.$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,inside:{punctuation:/[=>"']/}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},d.hooks.add("wrap",function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),d.languages.xml=d.languages.markup,d.languages.html=d.languages.markup,d.languages.mathml=d.languages.markup,d.languages.svg=d.languages.markup,d.languages.css={comment:/\/\*[\w\W]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^\{\}\s][^\{\};]*?(?=\s*\{)/,string:/("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,property:/(\b|\B)[\w-]+(?=\s*:)/i,important:/\B!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},d.languages.css.atrule.inside.rest=d.util.clone(d.languages.css),d.languages.markup&&(d.languages.insertBefore("markup","tag",{style:{pattern:/(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i,lookbehind:!0,inside:d.languages.css,alias:"language-css"}}),d.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|').*?\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:d.languages.markup.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:d.languages.css}},alias:"language-css"}},d.languages.markup.tag)),d.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\w\W]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0}],string:{pattern:/(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,lookbehind:!0,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(true|false)\b/,function:/[a-z0-9_]+(?=\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},d.languages.javascript=d.languages.extend("clike",{keyword:/\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,number:/\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,function:/[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i}),d.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0,greedy:!0}}),d.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\\\|\\?[^\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\$\{[^}]+\}/,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:d.languages.javascript}},string:/[\s\S]+/}}}),d.languages.markup&&d.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i,lookbehind:!0,inside:d.languages.javascript,alias:"language-javascript"}}),d.languages.js=d.languages.javascript,function(){"undefined"!=typeof self&&self.Prism&&self.document&&document.querySelector&&(self.Prism.fileHighlight=function(){var a={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"};Array.prototype.forEach&&Array.prototype.slice.call(document.querySelectorAll("pre[data-src]")).forEach(function(b){for(var c,e=b.getAttribute("data-src"),f=b,g=/\blang(?:uage)?-(?!\*)(\w+)\b/i;f&&!g.test(f.className);)f=f.parentNode;if(f&&(c=(b.className.match(g)||[,""])[1]),!c){var h=(e.match(/\.(\w+)$/)||[,""])[1];c=a[h]||h}var i=document.createElement("code");i.className="language-"+c,b.textContent="",i.textContent="Loading…",b.appendChild(i);var j=new XMLHttpRequest;j.open("GET",e,!0),j.onreadystatechange=function(){4==j.readyState&&(j.status<400&&j.responseText?(i.textContent=j.responseText,d.highlightElement(i)):j.status>=400?i.textContent="✖ Error "+j.status+" while fetching file: "+j.statusText:i.textContent="✖ Error: File does not exist or is empty")},j.send(null)})},document.addEventListener("DOMContentLoaded",self.Prism.fileHighlight))}()}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],"highlight-nl":[function(a,b,c){(function(){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;d=a("prismjs"),k=a("./netlogo-syntax-constants"),e=k.commands,f=k.constants,h=k.keywords,l=k.reporters,j=/[\s\[\(\]\)]/.source,m=/[^\s\[\(\]\)]/.source,n="(?="+j+"|$)",p="("+j+"|^)",o=function(a){return{pattern:new RegExp(p+"("+a+")"+n,"i"),lookbehind:!0}},i=function(a){return o("(?:"+a.join("|")+")")},g=function(){var a,b;return a=i(h).pattern.source,b=o(m+"*-own").pattern.source,new RegExp(a+"|"+b,"i")}(),c={comment:{pattern:/(^|[^\\]);.*/,lookbehind:!0},string:{pattern:/"(?:[^\\]|\\.)*?"/,greedy:!0},keyword:g,command:i(e),reporter:i(l),number:o(/0x[a-f\d]+|[-+]?(?:\.\d+|\d+\.?\d*)(?:e[-+]?\d+)?/.source),constant:i(f),variable:o(m+"+")},b.exports=function(a){return d.highlight(a,c)}}).call(this)},{"./netlogo-syntax-constants":"netlogo-syntax-constants",prismjs:1}],"netlogo-syntax-constants":[function(a,b,c){(function(){var a,c,d,e;a=["__bench","__change-topology","__done","__experimentstepend","__export-drawing","__foreverbuttonend","__ignore","__let","__linkcode","__make-preview","__mkdir","__observercode","__patchcode","__plot-pen-hide","__plot-pen-show","__pwd","__reload-extensions","__set-line-thickness","__stderr","__stdout","__thunk-did-finish","__turtlecode","ask","ask-concurrent","auto-plot-off","auto-plot-x-off","auto-plot-y-off","auto-plot-on","auto-plot-x-on","auto-plot-y-on","back","beep","bk","ca","carefully","cd","clear-all","clear-all-plots","clear-drawing","clear-globals","clear-links","clear-output","clear-patches","clear-plot","clear-ticks","clear-turtles","cp","create-link-from","create-link-to","create-link-with","create-links-from","create-links-to","create-links-with","create-ordered-turtles","create-temporary-plot-pen","create-turtles","cro","crt","ct","die","diffuse","diffuse4","display","downhill","downhill4","error","every","export-all-plots","export-interface","export-output","export-plot","export-view","export-world","face","facexy","fd","file-close","file-close-all","file-delete","file-flush","file-open","file-print","file-show","file-type","file-write","follow","follow-me","foreach","forward","hatch","hide-link","hide-turtle","histogram","home","ht","if","if-else","ifelse","import-drawing","import-pcolors","import-pcolors-rgb","import-world","insert-item","inspect","jump","layout-circle","layout-radial","layout-spring","layout-tutte","left","let","loop","lt","move-to","no-display","output-print","output-show","output-type","output-write","pd","pe","pen-down","pen-erase","pen-up","pendown","penup","plot","plot-pen-down","plot-pen-reset","plot-pen-up","plotxy","print","pu","random-seed","repeat","report","reset-perspective","reset-ticks","reset-timer","resize-world","ride","ride-me","right","rp","rt","run","set","set-current-directory","set-current-plot","set-current-plot-pen","set-default-shape","set-histogram-num-bars","set-patch-size","set-plot-background-color","set-plot-pen-color","set-plot-pen-interval","set-plot-pen-mode","set-plot-x-range","set-plot-y-range","set-topology","setup-plots","setxy","show","show-link","show-turtle","sprout","st","stamp","stamp-erase","stop","stop-inspecting","stop-inspecting-dead-agents","tick","tick-advance","tie","type","untie","update-plots","uphill","uphill4","user-message","wait","watch","watch-me","while","with-local-randomness","without-interruption","write"].reverse(),d=["BREED","TO","TO-REPORT","END","GLOBALS","TURTLES-OWN","LINKS-OWN","PATCHES-OWN","DIRECTED-LINK-BREED","UNDIRECTED-LINK-BREED","EXTENSIONS","__INCLUDES"],e=["!=","\\*","\\+","-","/","<","<=","=",">",">=","\\^","->","__boom","__check-syntax","__dump","__dump-extension-prims","__dump-extensions","__dump1","__hubnet-in-q-size","__hubnet-out-q-size","__nano-time","__patchcol","__patchrow","__processors","__random-state","__stack-trace","__to-string","abs","acos","all\\?","and","any\\?","approximate-hsb","approximate-rgb","asin","at-points","atan","autoplot\\?","autoplotx\\?","autoploty\\?","base-colors","behaviorspace-experiment-name","behaviorspace-run-number","bf","bl","both-ends","but-first","but-last","butfirst","butlast","can-move\\?","ceiling","cos","count","date-and-time","distance","distance-nowrap","distancexy","distancexy-nowrap","dx","dy","empty\\?","end1","end2","error-message","exp","extract-hsb","extract-rgb","file-at-end\\?","file-exists\\?","file-read","file-read-characters","file-read-line","filter","first","floor","fput","home-directory","hsb","hubnet-clients-list","hubnet-enter-message\\?","hubnet-exit-message\\?","hubnet-message","hubnet-message-source","hubnet-message-tag","hubnet-message-waiting\\?","ifelse-value","in-cone","in-cone-nowrap","in-link-from","in-link-neighbor\\?","in-link-neighbors","in-radius","in-radius-nowrap","int","is-agent\\?","is-agentset\\?","is-boolean\\?","is-command-task\\?","is-directed-link\\?","is-link-set\\?","is-link\\?","is-list\\?","is-number\\?","is-patch-set\\?","is-patch\\?","is-reporter-task\\?","is-string\\?","is-turtle-set\\?","is-turtle\\?","is-anonymous-command\\?","is-anonymous-reporter\\?","is-undirected-link\\?","item","last","length","link","link-heading","link-length","link-neighbor\\?","link-neighbors","link-set","link-shapes","link-with","links","list","ln","log","lput","map","max","max-n-of","max-one-of","max-pxcor","max-pycor","mean","median","member\\?","min","min-n-of","min-one-of","min-pxcor","min-pycor","mod","modes","mouse-down\\?","mouse-inside\\?","mouse-xcor","mouse-ycor","movie-status","my-in-links","my-links","my-out-links","myself","n-of","n-values","neighbors","neighbors4","netlogo-applet\\?","netlogo-version","netlogo-web\\?","new-seed","no-links","no-patches","no-turtles","not","of","one-of","or","other","other-end","out-link-neighbor\\?","out-link-neighbors","out-link-to","patch","patch-ahead","patch-at","patch-at-heading-and-distance","patch-here","patch-left-and-ahead","patch-right-and-ahead","patch-set","patch-size","patches","plot-name","plot-pen-exists\\?","plot-x-max","plot-x-min","plot-y-max","plot-y-min","position","precision","range","random","random-exponential","random-float","random-gamma","random-normal","random-or-random-float","random-poisson","random-pxcor","random-pycor","random-xcor","random-ycor","read-from-string","reduce","remainder","remove","remove-duplicates","remove-item","replace-item","reverse","rgb","round","run-result","runresult","scale-color","se","self","sentence","shade-of\\?","shapes","shuffle","sin","sort","sort-by","sort-on","sqrt","standard-deviation","subject","sublist","substring","subtract-headings","sum","tan","task","ticks","timer","towards","towards-nowrap","towardsxy","towardsxy-nowrap","turtle","turtle-set","turtles","turtles-at","turtles-here","turtles-on","up-to-n-of","user-directory","user-file","user-input","user-new-file","user-one-of","user-yes-or-no\\?","value-from","values-from","variance","who-are-not","with","with-max","with-min","word","world-height","world-width","wrap-color","xor","WHO","COLOR","HEADING","XCOR","YCOR","SHAPE","LABEL","LABEL-COLOR","BREED","HIDDEN\\?","SIZE","PEN-SIZE","PEN-MODE","PXCOR","PYCOR","PCOLOR","PLABEL","PLABEL-COLOR","END1","END2","COLOR","LABEL","LABEL-COLOR","HIDDEN\\?","BREED","THICKNESS","SHAPE","TIE-MODE"].reverse(),c=["TRUE","FALSE","NOBODY","E","PI","gray","grey","red","orange","brown","yellow","green","lime","turquoise","cyan","sky","blue","violet","magenta","pink","black","white"],b.exports={commands:a,constants:c,keywords:d,reporters:e}}).call(this)},{}]},{},["highlight-nl"]);