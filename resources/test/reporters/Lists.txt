Sentence1
  sentence 1 2 => [1 2]

Sentence2
  sentence [1 2] 3 => [1 2 3]

Sentence3
  sentence 1 [2 3] => [1 2 3]

Sentence4
  sentence [1 2] [3 4] => [1 2 3 4]

Sentence5
  sentence [] [] => []

Sentence6
  (sentence [1 2]) => [1 2]

Sentence7
  (sentence 8) => [8]

Sentence8
  (sentence [1] 2 [3] 4 [5]) => [1 2 3 4 5]

Sentence9
  (sentence [1] 2 [] 4 [5]) => [1 2 4 5]

Sentence10
  (sentence [1] 2 [] 4 [[5]]) => [1 2 4 [5]]

Sentence11
  (sentence) => []

Sentence12
  (sentence [1]) => [1]

Fput1
  fput 1 [] => [1]

Fput2
  fput [] [] => [[]]

Fput3
  fput 2 [3 4] => [2 3 4]

Fput4
  fput "foo" [3 4] => ["foo" 3 4]

Lput1
  lput 1 [] => [1]

Lput2
  lput [] [] => [[]]

Lput3
  lput 2 [3 4] => [3 4 2]

Lput4
  lput "foo" [3 4] => [3 4 "foo"]

Lput5
  lput 2 first [1] => ERROR LPUT expected input to be a list but got the number 1 instead.

ListFirst1
  first [] => ERROR List is empty.

ListFirst2
  first [8] => 8

ListFirst3
  first [[]] => []

ListFirst4
  first [1 2] => 1

ListReplaceIt1
  replace-item 3 [7 10 "Bob" [3 0 -2]] (replace-item 2 (item 3 [7 10 "Bob" [3 0 -2]]) 9) => [7 10 "Bob" [3 0 9]]

ListReplaceIt2
  replace-item 0 [] [] => ERROR Can't find element 0 of the list [], which is only of length 0.

ReduceMinus
  reduce [?1 - ?2] [1 2 3] => -4

ReducePlus
  reduce [?1 + ?2] [1 2 3] => 6

ReduceIntReturn
  (reduce [?1 + ?2] [1 2 3]) + 2 => 8

ReduceReverse
  reduce [fput ?2 ?1] [[] 1 2 3] => [3 2 1]

ReduceSingle
  reduce [?1 + ?2] [1] => 1

ReduceEmpty
  reduce [?1 + ?2] [] => ERROR The list argument to reduce must not be empty.

MapEmpty
  map [round ?] [] => []

MapSimple
  map [?] [1 2 3] => [1 2 3]

MapVariadic
  (map [?1 + ?2] [1 2 3] [4 5 6]) => [5 7 9]

MapNotEnoughInputs
  map + [1 2 3 4] => ERROR task expected 2 inputs, but only got 1

SortBy1
  sort-by [?1 < ?2] [4 1 3 2] => [1 2 3 4]

SortBy2
  sort-by [?1 > ?2] [4 1 3 2] => [4 3 2 1]

SortBy3
  sort-by [?1 > ?2] [] => []

SortBy4
  sort-by [?1 > ?2] [5] => [5]

SortBy5
  sort-by [?1] [5 5] => ERROR SORT-BY expected input to be a TRUE/FALSE but got the number 5 instead.

SortByStable1
  sort-by [first ?1 < first ?2] [[1 2] [1 3]] => [[1 2] [1 3]]

SortByStable2
  sort-by [first ?1 < first ?2] [[1 3] [1 2]] => [[1 3] [1 2]]

SortByStable3
  sort-by [first ?1 > first ?2] [[1 2] [1 3]] => [[1 2] [1 3]]

SortByStable4
  sort-by [first ?1 > first ?2] [[1 3] [1 2]] => [[1 3] [1 2]]

SortByStable5
  sort-by [first ?1 < first ?2] [[1 3] [1 3] [1 2] [1 2] [1 4] [1 4]] => [[1 3] [1 3] [1 2] [1 2] [1 4] [1 4]]

SortByStable6
  sort-by [first ?1 < first ?2] [[2 3] [2 2] [2 1] [1 6] [1 5] [1 4] [3 7] [3 8] [3 9]] => [[1 6] [1 5] [1 4] [2 3] [2 2] [2 1] [3 7] [3 8] [3 9]]

Sort1
  sort [3 1 3 4 2 5] => [1 2 3 3 4 5]

Sort2
  sort [3 1 3 "foo" 4 2 5] => [1 2 3 3 4 5]

Sort3
  sort ["a" "b" 3 "c" 2 "d"] => [2 3]

Sort4
  sort ["c" "a" "b"] => ["a" "b" "c"]

Sort5
  sort ["c" [[[]]] [] "a" [] "b" nobody] => ["a" "b" "c"]

Sort6
  sort [] => []

Sort7
  sort ["b" "df" "in" "cz" "intial"] => ["b" "cz" "df" "in" "intial"]

Sort8
  sort [3 2.0 1] => [1 2 3]

ListEmpty
  map [empty? ?] [[] [1]] => [true false]

ListItem1
  item 0 [] => ERROR Can't find element 0 of the list [], which is only of length 0.

ListItem2
  item 1 [1] => ERROR Can't find element 1 of the list [1], which is only of length 1.

ListItem3
  item 0 [1] => 1

ListItem4
  item 1 [1 []] => []

ListLast1
  last [] => ERROR List is empty.

ListLast2
  last [1] => 1

ListLast3
  last [1 2] => 2

List1
  list 1 2 => [1 2]

List2
  (list 1 2 3) => [1 2 3]

List3
  (list 1) => [1]

List4
  (list) => []

List5
  (list 1) => [1]

ListLength1
  length [] => 0

ListLength2
  length [2] => 1

ListLength3
  length first [3] => ERROR LENGTH expected input to be a string or list but got the number 3 instead.

ListMember1
  member? [] [] => false

ListMember2
  member? [] [[]] => true

ListMember3
  member? 1 [2 1] => true

ListMember4
  member? 2 [] => false

ListMember5
  member? [1 2] [1 [2 3] [1 2] 4] => true

ListMember6
  member? "foo" ["FOO"] => false

ListMember7
  member? "foo" ["foo"] => true

ListPosition1
  position [] [] => false

ListPosition2
  position [] [[]] => 0

ListPosition3
  position 1 [2 1] => 1

ListPosition4
  position 2 [] => false

ListPosition5
  position [1 2] [1 [2 3] [1 2] 4] => 2

ListPosition6
  position "foo" ["FOO"] => false

ListPosition7
  position "foo" ["foo"] => 0

ListRemove1
  remove 7 [2 7 4 7 "Bob"] => [2 4 "Bob"]

ListRemove2
  remove 7 [2 6 4 6] => [2 6 4 6]

ListRemove3
  remove 7 [7 7 7 7] => []

ListRemove4
  remove [1 2] [[1 2] 3 4 [1 2] 5 [1 2] 6] => [3 4 5 6]

ListRemoveItem1
  remove-item 0 [1 2 3] => [2 3]

ListRemoveItem2
  remove-item 1 [1 2 3] => [1 3]

ListRemoveItem3
  remove-item 2 [1 2 3] => [1 2]

ListRemoveItem4
  remove-item 3 [1 2 3] => ERROR Can't find element 3 of the list [1 2 3], which is only of length 3.

ListRemoveItem5
  remove-item -1 [1 2 3] => ERROR -1 isn't greater than or equal to zero.

ListRemoveItem6
  remove-item 0 [] => ERROR Can't find element 0 of the list [], which is only of length 0.

ListRemDups1
  remove-duplicates [2 7 4 7 "Bob" 7] => [2 7 4 "Bob"]

ListRemDups2
  remove-duplicates [1 2 3 22 232 12 12 321 123 123 213 23 213 11 3 312 21 32 13 123 123] => [1 2 3 22 232 12 321 123 213 23 11 312 21 32 13]

ListRemDups3
  remove-duplicates [] => []

ListRemDups4
  remove-duplicates [[1 2] [1 2]] => [[1 2]]

ListReplItem1
  replace-item 2 [2 7 4 5] 15 => [2 7 15 5]

ListReplItem2
  replace-item -1 [2 7 4 5] 15 => ERROR -1 isn't greater than or equal to zero.

ListReplItem3
  replace-item 4 [2 7 4 5] 15 => ERROR Can't find element 4 of the list [2 7 4 5], which is only of length 4.

ListReplItem4
  replace-item 0 [[[]]] [] => [[]]

ListReverse1
  reverse [] => []

ListReverse2
  reverse [[] [[]]] => [[[]] []]

ListReverse3
  reverse [3 2 1] => [1 2 3]

ListButFirst1
  bf [1 2 3 4] => [2 3 4]

ListButFirst2
  bf [1] => []

ListButFirst3
  bf [] => ERROR BF got an empty list as input.

ListButLast1
  bl [1 2 3 4] => [1 2 3]

ListButLast2
  bl [1] => []

ListButLast3
  bl [] => ERROR BL got an empty list as input.

ListSubList1
  sublist [1 2 3] 0 0 => []

ListSubList2
  sublist [1 2 3] 0 1 => [1]

ListSubList3
  sublist [1 2 3] 1 1 => []

ListSubList4
  sublist [1 2 3] 1 2 => [2]

ListSubList5
  sublist [] 0 0 => []

ListSubList6
  sublist [1 2] 1 0 => ERROR 0 is less than 1.

ListSubList7
  sublist [1 2] 0 2 => [1 2]

ListSubList8
  sublist [1 2] 0 3 => ERROR 3 is greater than the length of the input list (2).

ListSubList9
  sublist [1 2 3] -1 0 => ERROR -1 is less than zero.

ListSubList10
  sublist [99 88 77 66] 1 3 => [88 77]

ListSubList11
  sublist [0 1] 2 2 => []

ListSubList12
  sublist [0 1] 10 15 => ERROR 15 is greater than the length of the input list (2).

ListMultiOps1
  first sublist [9 8 7] 1 2 => 8

ListMultiOps2
  first butfirst [9 8 7] => 8

ListMultiOps3
  last butlast [9 8 7] => 8

