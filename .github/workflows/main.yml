name: build-and-test

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  liberica-version: '17.0'

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ 'pull_request' != github.event_name || (github.event.pull_request.head.repo.git_url != github.event.pull_request.base.repo.git_url) }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4
        # This setting can be re-added and the `Clone Git submoudles` step removed when this bug is fixed and released:
        # https://github.com/actions/checkout/issues/994 -Jeremy B April 2023
        # with:
        #   submodules: true

      - name: Clone Git submodules
        run: git submodule update --init

      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ env.liberica-version }}
          java-package: jdk+fx
          cache: 'sbt'

      - name: Build NetLogo
        run: |
          ./sbt update all headless/compile parserJS/compile
          ./sbt depend headless/depend

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  # Kept separate from the test matrix just to avoid installing the python stuff.
  # There might be a better/cleverer way to handle it, but this is fine for now.
  test-extensions:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ env.liberica-version }}
          java-package: jdk+fx
          cache: 'sbt'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # The Python stuff is just for testing the Python extension, it's not part of NetLogo's build process.
      - name: Install Dependencies
        run: |
          pip3 install numpy
          pip3 install scikit-learn

      - name: Test Extensions
        run: ./sbt netlogo/Test/extensionTests

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test: [
          "parserJS/test; parserJVM/test"
        , "netlogo/Test/fast"
        , "netlogo/Test/medium"
        , "netlogo/Test/slow"
        , "nogen; netlogo/Test/fast"
        , "nogen; netlogo/Test/medium"
        , "threed; netlogo/Test/fast"
        , "threed; netlogo/Test/medium"
        , "threed; netlogo/Test/slow"
        , "headless/Test/fast"
        , "headless/Test/medium"
        , "headless/Test/slow"
        , "nogen; headless/Test/fast"
        , "nogen; headless/Test/medium"
        ]

    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ env.liberica-version }}
          java-package: jdk+fx
          cache: 'sbt'

      - name: ${{ matrix.test }}
        run: ./sbt "${{ matrix.test }}"
